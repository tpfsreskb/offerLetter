  <div style={{ width: "20vw" }}>
          <h1>Offer Letter Generator</h1>

          <div
            style={{
              width: "25vw",
              position: "relative",
              height: "85vh",
              overflow: "scroll",
            }}
          >
            <form>
              {/* First Name */}
              <Grid container spacing={3}>
                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="country"
                        onChange={handleChange}
                        value="India"
                        checked={formData.country === "India"}
                      />
                    }
                    label="Indian Offer Letter"
                  />
                </Grid>
                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="country"
                        onChange={handleChange}
                        value="USA"
                        checked={formData.country === "USA"}
                      />
                    }
                    label="USA Offer Letter"
                  />
                </Grid>
                {/* <Grid item xs={4}>
                <FormControlLabel
                  control={
                    <Checkbox
                      name="country"
                      onChange={handleChange}
                      value="NZ"
                      checked={formData.country === "NZ"}
                    />
                  }
                  label="NZ Offer Letter"
                />
              </Grid> */}
              </Grid>
              <Accordion>
                <AccordionSummary
                  expandIcon={<ExpandMoreIcon />}
                  aria-controls="panel1-content"
                  id="panel1-header"
                >
                  <Typography component="span">Personal Details</Typography>
                </AccordionSummary>
                <AccordionDetails>
                  <Grid
                    container
                    rowSpacing={1}
                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}
                  >
                    <Grid item size={12}>
                      <TextField
                        fullWidth
                        label="First Name"
                        name="firstName"
                        value={formData.firstName}
                        onChange={handleChange}
                        variant="outlined"
                      />
                    </Grid>
                    <Grid item size={12}>
                      <TextField
                        fullWidth
                        label="Last Name"
                        name="lastName"
                        value={formData.lastName}
                        onChange={handleChange}
                        variant="outlined"
                      />
                    </Grid>
                    <Grid item size={12}>
                      <TextField
                        fullWidth
                        label="Candidate Designation"
                        name="jobTitle"
                        value={formData.jobTitle}
                        onChange={handleChange}
                        variant="outlined"
                      />
                    </Grid>
                    <Grid item size={12}>
                      <TextField
                        fullWidth
                        label="Date of Joining"
                        name="joiningDate"
                        type="date"
                        value={formData.joiningDate}
                        onChange={handleChange}
                        InputLabelProps={{
                          shrink: true,
                        }}
                        variant="outlined"
                      />
                    </Grid>
                    <Grid item size={12}>
                      <TextField
                        fullWidth
                        label="Expiry Date"
                        name="expiryDate"
                        type="date"
                        value={formData.expiryDate}
                        onChange={handleChange}
                        InputLabelProps={{
                          shrink: true,
                        }}
                        variant="outlined"
                      />
                    </Grid>
                  </Grid>
                </AccordionDetails>
              </Accordion>

              <Grid
                container
                rowSpacing={1}
                mt={2}
                columnSpacing={{ xs: 1, sm: 2, md: 3 }}
              >
                <Grid item size={12}>
                  <TextField
                    fullWidth
                    label="Hr Name"
                    name="hrName"
                    value={formData.hrName}
                    onChange={handleChange}
                    variant="outlined"
                  />
                </Grid>
                {/* HR Designation */}
                <Grid item size={12}>
                  <TextField
                    fullWidth
                    label="HR Designation"
                    name="hrDesignation"
                    value={formData.hrDesignation}
                    onChange={handleChange}
                    variant="outlined"
                  />
                </Grid>

                {/* Job Title */}

                <Grid item size={12}>
                  <TextField
                    fullWidth
                    label="Reporting Manager"
                    name="reportingManager"
                    value={formData.reportingManager}
                    onChange={handleChange}
                    variant="outlined"
                  />
                </Grid>
                <Grid item size={12}>
                  <TextField
                    fullWidth
                    label="Reporting Manager Deisgnation"
                    name="reportingManagerJobTitle"
                    value={formData.reportingManagerJobTitle}
                    onChange={handleChange}
                    variant="outlined"
                  />
                </Grid>
              </Grid>
              {/* Date of Joining */}

              <Grid container mt={2} spacing={2}>
                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Annual Salary"
                    name="annualSalary"
                    type="Number"
                    value={formData.annualSalary}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
                {formData.country === "India" && (
                  <Grid item xs={4}>
                    <TextField
                      fullWidth
                      label="Insurance"
                      name="insurance"
                      type="Number"
                      value={formData.insurance}
                      onChange={handleChange}
                      InputLabelProps={{
                        shrink: true,
                      }}
                      variant="outlined"
                    />
                  </Grid>
                )}
                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="PF"
                    name="pf"
                    type="Number"
                    value={formData.pf}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Guaranteed Bonus"
                    name="gb"
                    type="Number"
                    value={formData.gb}
                    disabled={!formData.showBonus}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Joining Bonus"
                    name="fb"
                    type="Number"
                    value={formData.fb}
                    disabled={!formData.showJoiningBonus}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Performance Bonus"
                    name="performanceBonus"
                    type="Number"
                    value={formData.performanceBonus}
                    disabled={!formData.showPb}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>

                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Reloaction Alowance"
                    name="relocation"
                    type="Number"
                    disabled={!formData.showRelocation}
                    value={formData.relocation}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Incentive"
                    name="incentive"
                    type="Number"
                    value={formData.incentive}
                    disabled={!formData.showIncentive}
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
              </Grid>
              <Grid container mt={2} spacing={2}>
                {formData.country === "India" && (
                  <>
                    <Grid item xs={4}>
                      <TextField
                        fullWidth
                        label="Basic Pay Amount"
                        name="employeeBasicPay"
                        type="Number"
                        value={
                          (formData.annualSalary -
                            formData.insurance -
                            formData.gb -
                            formData.fb -
                            formData.pf) *
                          0.5
                        }
                        onChange={handleChange}
                        InputLabelProps={{
                          shrink: true,
                        }}
                        variant="outlined"
                      />
                    </Grid>
                    <Grid item xs={4}>
                      <TextField
                        fullWidth
                        label="HRA"
                        name="hra"
                        type="Number"
                        value={
                          ((formData.annualSalary -
                            formData.insurance -
                            formData.gb -
                            formData.fb -
                            formData.pf) *
                            0.4) /
                          2
                        }
                        onChange={handleChange}
                        InputLabelProps={{
                          shrink: true,
                        }}
                        variant="outlined"
                      />
                    </Grid>
                  </>
                )}

                <Grid item xs={4}>
                  <TextField
                    fullWidth
                    label="Upload Signature (Optional)"
                    name="signature"
                    type="file"
                    accept="image/*"
                    onChange={handleChange}
                    InputLabelProps={{
                      shrink: true,
                    }}
                    variant="outlined"
                  />
                </Grid>
              </Grid>
              <Grid container mt={2} spacing={2}>
                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="showBonus"
                        onChange={handleChange}
                        checked={formData.showBonus}
                      />
                    }
                    label="Guaranteed Bonus"
                  />
                  {formData.showBonus && (
                    <Grid container mt={2} spacing={2}>
                      <Grid item xs={12}>
                        <TextField
                          fullWidth
                          label="Guaranteed Bonus Description"
                          name="guaranteedBonusDesc"
                          multiline
                          rows={3}
                          value={formData.guaranteedBonusDesc}
                          onChange={handleChangeDesc}
                          variant="outlined"
                        />
                      </Grid>
                      <Grid item xs={12}>
                        <button
                          type="button"
                          onClick={() => handleSave("guaranteedBonusDesc")}
                        >
                          Save Guaranteed Bonus
                        </button>
                      </Grid>
                    </Grid>
                  )}
                </Grid>
                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="showJoiningBonus"
                        onChange={handleChange}
                        checked={formData.showJoiningBonus}
                      />
                    }
                    label="Joining Bonus"
                  />
                  {/* formData.selectedOption ===
                  "showJoiningBonus" */}
                  {formData.showJoiningBonus && (
                    <Grid container mt={2} spacing={2}>
                      <Grid item xs={12}>
                        <TextField
                          fullWidth
                          label="Joining Bonus Description"
                          name="joiningBonusDesc"
                          multiline
                          rows={3}
                          value={formData.joiningBonusDesc}
                          onChange={handleChangeDesc}
                          variant="outlined"
                        />
                      </Grid>
                      <Grid item xs={12}>
                        <button
                          type="button"
                          onClick={() => handleSave("joiningBonusDesc")}
                        >
                          Save Joining Bonus
                        </button>
                      </Grid>
                    </Grid>
                  )}
                </Grid>
                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="showPb"
                        onChange={handleChange}
                        checked={formData.showPb}
                      />
                    }
                    label="Performance Bonus"
                  />
                  {/* formData.selectedOption === "showPb" && */}
                  {formData.showPb && (
                    <Grid container mt={2} spacing={2}>
                      <Grid item xs={12}>
                        <TextField
                          fullWidth
                          label="Performance Bonus Description"
                          name="performanceBonusDesc"
                          multiline
                          rows={3}
                          value={formData.performanceBonusDesc}
                          onChange={handleChangeDesc}
                          variant="outlined"
                        />
                      </Grid>
                      <Grid item xs={12}>
                        <button
                          type="button"
                          onClick={() => handleSave("performanceBonusDesc")}
                        >
                          Save Performance Bonus
                        </button>
                      </Grid>
                    </Grid>
                  )}
                </Grid>
                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="showIncentive"
                        onChange={handleChange}
                        checked={formData.showIncentive}
                      />
                    }
                    label="Incentive"
                  />
                  {formData.showIncentive && (
                    <Grid container mt={2} spacing={2}>
                      <Grid item xs={12}>
                        <TextField
                          fullWidth
                          label="Incentive Description"
                          name="incentiveDesc"
                          multiline
                          rows={3}
                          value={formData.incentiveDesc}
                          onChange={handleChangeDesc}
                          variant="outlined"
                        />
                      </Grid>
                      <Grid item xs={12}>
                        <button
                          type="button"
                          onClick={() => handleSave("incentiveDesc")}
                        >
                          Save Guaranteed Bonus
                        </button>
                      </Grid>
                    </Grid>
                  )}
                </Grid>

                <Grid item xs={4}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        name="showRelocation"
                        onChange={handleChange}
                        checked={formData.showRelocation}
                      />
                    }
                    label="Relocation allowance"
                  />
                  {formData.showRelocation && (
                    <Grid container mt={2} spacing={2}>
                      <Grid item xs={12}>
                        <TextField
                          fullWidth
                          label="Relocation Description"
                          name="relocationDesc"
                          multiline
                          rows={3}
                          value={formData.relocationDesc}
                          onChange={handleChangeDesc}
                          variant="outlined"
                        />
                      </Grid>
                      <Grid item xs={12}>
                        <button
                          type="button"
                          onClick={() => handleSave("relocationDesc")}
                        >
                          Save Guaranteed Bonus
                        </button>
                      </Grid>
                    </Grid>
                  )}
                </Grid>
              </Grid>
            </form>
          </div>
        </div>